version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    volumes:
      - /home/chitwan/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1,event_log:1:1"
      KAFKA_ADVERTISED_HOST_NAME: microservices-3855.eastus.cloudapp.azure.com
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://microservices-3855.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/chitwan/kafka:/kafka/kafka-logs
    depends_on:
      - zookeeper

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'Password'
      MYSQL_ROOT_PASSWORD: 'Password'
    ports:
      - '3306:3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    image: receiver:latest
    ports:
      - "8080"
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/chitwan/config/receiver:/config
      - /home/chitwan/logs:/logs
    depends_on:
      - kafka
      - db

  storage:
    image: storage:latest
    ports:
      - "8090"
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/chitwan/config/storage:/config
      - /home/chitwan/logs:/logs
    depends_on:
      - kafka
      - db

  processing:
    image: processing:latest
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/chitwan/config/processing:/config
      - /home/chitwan/logs:/logs
      - processing-db:/data
    depends_on:
      - kafka
      - storage

  audit_log:
    image: audit_log:latest
    ports:
      - "8110"
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/chitwan/config/audit_log:/config
      - /home/chitwan/logs:/logs
    depends_on:
      - kafka

  dashboard:
    image: dashboard-ui
    ports:
      - "3000"
    networks:
      - "api.network"
    depends_on:
      - "processing"
      - "audit_log"

  event_logger:
    image: event_logger
    ports:
      - "8120:8120" 
    environment:
      - TARGET_ENV=test 
    depends_on:
      - kafka
    volumes:
      - event-logger-db:/app/db

  anomaly_detector:
    image: anomaly_detector
    ports: 
      - 5000:5000
    depends_on:
      - kafka
      
  nginx:
    image: nginx:latest
    volumes:
      - /home/chitwan/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "receiver"
      - "storage"
      - "processing"
      - "audit_log"
      - "dashboard"
    ports:
      - "80:80"
    networks:
      - "api.network"

networks:
  api.network:
    driver: bridge

volumes:
  my-db:
    driver: local
  processing-db:
    driver: local
  event-logger-db: 
    driver: local
